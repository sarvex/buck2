"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1391],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>i,MDXProvider:()=>c,mdx:()=>h,useMDXComponents:()=>d,withMDXComponents:()=>p});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a.apply(this,arguments)}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),p=function(e){return function(t){var n=d(t.components);return r.createElement(e,a({},t,{components:n}))}},d=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(i.Provider,{value:t},e.children)},f="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},x=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,i=u(e,["components","mdxType","originalType","parentName"]),p=d(n),c=o,f=p["".concat(l,".").concat(c)]||p[c]||m[c]||a;return n?r.createElement(f,s(s({ref:t},i),{},{components:n})):r.createElement(f,s({ref:t},i))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=x;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[f]="string"==typeof e?e:o,l[1]=s;for(var i=2;i<a;i++)l[i]=n[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}x.displayName="MDXCreateElement"},91058:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>i});var r=n(87462),o=(n(67294),n(3905));const a={id:"ExternalRunnerTestInfo"},l="ExternalRunnerTestInfo type",s={unversionedId:"api/build/providers/ExternalRunnerTestInfo",id:"api/build/providers/ExternalRunnerTestInfo",title:"ExternalRunnerTestInfo type",description:"Provider that signals that a rule can be tested using an external runner. This is the Buck1-compatible API for tests.",source:"@site/../docs/api/build/providers/ExternalRunnerTestInfo.generated.md",sourceDirName:"api/build/providers",slug:"/api/build/providers/ExternalRunnerTestInfo",permalink:"/docs/api/build/providers/ExternalRunnerTestInfo",draft:!1,tags:[],version:"current",frontMatter:{id:"ExternalRunnerTestInfo"},sidebar:"manualSidebar",previous:{title:"ExecutionPlatformRegistrationInfo type",permalink:"/docs/api/build/providers/ExecutionPlatformRegistrationInfo"},next:{title:"InstallInfo type",permalink:"/docs/api/build/providers/InstallInfo"}},u={},i=[{value:"ExternalRunnerTestInfo.command",id:"externalrunnertestinfocommand",level:2},{value:"ExternalRunnerTestInfo.contacts",id:"externalrunnertestinfocontacts",level:2},{value:"ExternalRunnerTestInfo.default_executor",id:"externalrunnertestinfodefault_executor",level:2},{value:"ExternalRunnerTestInfo.env",id:"externalrunnertestinfoenv",level:2},{value:"ExternalRunnerTestInfo.executor_overrides",id:"externalrunnertestinfoexecutor_overrides",level:2},{value:"ExternalRunnerTestInfo.labels",id:"externalrunnertestinfolabels",level:2},{value:"ExternalRunnerTestInfo.run_from_project_root",id:"externalrunnertestinforun_from_project_root",level:2},{value:"ExternalRunnerTestInfo.test_type",id:"externalrunnertestinfotest_type",level:2},{value:"ExternalRunnerTestInfo.use_project_relative_paths",id:"externalrunnertestinfouse_project_relative_paths",level:2}],p={toc:i};function d(e){let{components:t,...n}=e;return(0,o.mdx)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"externalrunnertestinfo-type"},(0,o.mdx)("inlineCode",{parentName:"h1"},"ExternalRunnerTestInfo")," type"),(0,o.mdx)("p",null,"Provider that signals that a rule can be tested using an external runner. This is the Buck1-compatible API for tests."),(0,o.mdx)("h2",{id:"externalrunnertestinfocommand"},"ExternalRunnerTestInfo.command"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-python"},'ExternalRunnerTestInfo.command: [[str.type, ""]]\n')),(0,o.mdx)("p",null,"A Starlark value representing the command for this test. The external test runner is what gives meaning to this command. This is of type [",'[str.type, "_arglike"]',"]"),(0,o.mdx)("hr",null),(0,o.mdx)("h2",{id:"externalrunnertestinfocontacts"},"ExternalRunnerTestInfo.contacts"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-python"},"ExternalRunnerTestInfo.contacts: [str.type]\n")),(0,o.mdx)("p",null,"A starlark value representing the contacts for this test. This is largely expected to be an oncall, though it's not validated in any way. This is of type ","[str.type]"),(0,o.mdx)("hr",null),(0,o.mdx)("h2",{id:"externalrunnertestinfodefault_executor"},"ExternalRunnerTestInfo.default_executor"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-python"},'ExternalRunnerTestInfo.default_executor: "command_executor_config"\n')),(0,o.mdx)("p",null,"Default executor to use to run tests.  This is of type CommandExecutorConfig. If none is passed we will default to the execution platform."),(0,o.mdx)("hr",null),(0,o.mdx)("h2",{id:"externalrunnertestinfoenv"},"ExternalRunnerTestInfo.env"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-python"},'ExternalRunnerTestInfo.env: {str.type: ""}\n')),(0,o.mdx)("p",null,"A Starlark value representing the environment for this test. Here again, the external test runner is what will this meaning. This is of type {str.type: _arglike}"),(0,o.mdx)("hr",null),(0,o.mdx)("h2",{id:"externalrunnertestinfoexecutor_overrides"},"ExternalRunnerTestInfo.executor_overrides"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-python"},'ExternalRunnerTestInfo.executor_overrides: {str.type: "command_executor_config"}\n')),(0,o.mdx)("p",null,"Executors that Tpx can use to override the default executor. This is of type {str.type: CommandExecutorConfig}"),(0,o.mdx)("hr",null),(0,o.mdx)("h2",{id:"externalrunnertestinfolabels"},"ExternalRunnerTestInfo.labels"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-python"},"ExternalRunnerTestInfo.labels: [str.type]\n")),(0,o.mdx)("p",null,"A starlark value representing the labels for this test. This is of type ","[str.type]"),(0,o.mdx)("hr",null),(0,o.mdx)("h2",{id:"externalrunnertestinforun_from_project_root"},"ExternalRunnerTestInfo.run_from_project_root"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-python"},"ExternalRunnerTestInfo.run_from_project_root: [bool.type]\n")),(0,o.mdx)("p",null,"Whether this test should run from the project root, as opposed to the cell root. The default is not to. This is of type ","[bool.type]"),(0,o.mdx)("hr",null),(0,o.mdx)("h2",{id:"externalrunnertestinfotest_type"},"ExternalRunnerTestInfo.test_type"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-python"},"ExternalRunnerTestInfo.test_type: str.type\n")),(0,o.mdx)("p",null,"A Starlark value representing the type of this test. This is of type str.type"),(0,o.mdx)("hr",null),(0,o.mdx)("h2",{id:"externalrunnertestinfouse_project_relative_paths"},"ExternalRunnerTestInfo.use_project_relative_paths"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-python"},"ExternalRunnerTestInfo.use_project_relative_paths: [bool.type]\n")),(0,o.mdx)("p",null,"Whether this test should use relative paths. The default is not to. This is of type ","[bool.type]"))}d.isMDXComponent=!0}}]);